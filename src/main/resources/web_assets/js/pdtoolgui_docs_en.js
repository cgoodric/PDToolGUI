// tool tip information for form fields by html file. the first field is the jQuery selector that identifies 
// the DOM object to apply the "title" attribute to, the second is the tooltip text.
//
var TOOLTIPS = {
    "config_dep_conf" : {
        "label[for=suppress_comments]":                      "Suppress printing PDTool orchestration comments to the log",
        "label[for=debug1]":                                 "Debug PDTool script only",
        "label[for=debug2]":                                 "Debug deployment plan step execution",
        "label[for=debug3]":                                 "Debug 3rd level scripts invoked from deployment plan step executions",
        "label[for=diffmerger_verbose]":                     "Allows the VCS Diffmerger process to output more information when set to true",
        "label[for=all_resources_indicator]":                "Used in plan files to signify all IDs in a module file",
        "label[for=exclude_resources_indicator]":            "Used in plan files to signify all IDs in a module file, <b><i>except</i></b> the listed IDs",
        "label[for=user_option_threshold]":                  "The threshold of the number of users where it is more efficient to retrieve all users at once vs. retreiving one user at a time. <b>0</b> indicates to always retrieve users one at a time.",
        "label[for=dsm_non_updatable_attributes]":           "List of DataSourceModule generic attributes that are not updateable",
        "label[for=sam_non_updatable_attributes]":           "List of ServerAttributeModul generic attributes that are not updateable",
        "label[for=dm_non_updatable_attributes]":            "List of DomainModule generic attributes that are not updateable",
        "label[for=vm_external_vcs_resource_type_list]":     "Maps new CIS resource types to VCS resource types. E.g.: <span class='code'>folder=Data Source,folder=Composite Database,procedure=Basic Transformation</span>",
        "label[for=cis_ping_server]":                        "Controls whether the server performs a ping on the target CIS instance prior to executing an actual command",
        "label[for=cis_connect_retry]":                      "The number of connection attempts to make to the target CIS instance before throwing an error",
        "label[for=cis_connect_retry_sleep]":                "Number of milliseconds to sleep between connection retries",
        "label[for=vcs_multi_user_topology]":                "Indicates whether the VCS Multi-User [Direct VCS Access] Topology is being used or not",
        "label[for=vcs_type]":                               "The type of VCS being used",
        "label[for=vcs_home]":                               "VCS Client Home directory where the VCS executable lives. Note: This could be a /bin directory. It must be where the VCS Command is found. Windows example: <span class='code'>D:/dev/vcs/csvn/bin</span> or <span class='code'>D:\\\\dev\\\\vcs\\\\csvn\\\\bin</span>, UNIX example: <span class='code'>/usr/bin</span>.",
        "label[for=vcs_command]":                            "The actual command (executable or batch script) for the given VCS Type",
        "label[for=vcs_exec_full_path]":                     "Execute the VCS command with the full path (<b>True</b>) or the VCS command only (<b>False</b>). When set to <b>False</b>, the VCS Command must be in the system path.",
        "label[for=vcs_options]":                            "VCS options are specific to the VCS type being used and are included in the command line (not set as environment variables.) Subversion examples: <span class='code'>--non-interactive --no-auth-cache --trust-server-cert --config-dir c:\\</span>",
        "label[for=vcs_workspace_init_new_options]":         "Options to use when initializing a new VCS workspace",
        "label[for=vcs_workspace_init_link_options]":        "Options to use when linking a new VCS workspace",
        "label[for=vcs_workspace_init_get_options]":         "Options to use when performing initial get operation with a new VCS workspace",
        "label[for=vcs_checkin_options]":                    "Options to use when checking resources into a VCS",
        "label[for=vcs_checkin_options_required]":           "A comma separated list of base-level commands that are required for checkin. <b>VCS Checkin Options</b> is validated against this list.",
        "label[for=vcs_checkout_options]":                   "Options to use when checking resources out of a VCS",
        "label[for=vcs_checkout_options_required]":          "A comma separated list of base-level commands that are required for checkout. <b>VCS Checkout Options</b> is validated against this list.",
        "label[for=vcs_repository_url]":                     "The base URL that identifies the VCS server. The \"//\" after the protocol specification may need to be doubled in some cases, as in <span class='code'>http:////myhost.domain.com/svn/sandbox/PDTOOL</span>.",
        "label[for=vcs_project_root]":                       "The root name of the project on the VCS Server",
        "label[for=vcs_workspace_home]":                     "This is the CIS VCS Workspace Home. It is recommended to set the location to PDTool home, e.g. <span class='code'>$PROJECT_HOME</span>.",
        "label[for=vcs_workspace_name]":                     "The name of the workspace folder.  This is not a directory but simply a name. The shorter the better. If running PDTool on the same machine as PDToolStudio then the workspace names should be different.",
        "label[for=vcs_workspace_dir]":                      "The VCS workspace folder. Generally set to the combination of <b>Workspace Home</b> and <b>Workspace Name</b>.",
        "label[for=vcs_temp_dir]":                           "The folder used for temporary files. Generally set to a combination of the <b>Workspace Home</b> and a temp dir name such as <span class='code'>$VCS_TYPE$_temp</span>.",
        "label[for=vcs_username]":                           "The username of the user logging into the VCS Server (optional)",
        "label[for=vcs_password]":                           "The password of the user logging into the VCS Server (optional). The password is automatically encrypted.",
        "label[for=vcs_ignore_messages]":                    "A comma separated list of messages for the VCS Module to ignore upon execution",
        "label[for=vcs_message_prepend]":                    "A static message that gets prepended onto all check-in or forced check-in messages",
        "label[for=svn_editor]":                             "Subversion editor for messages",
        "label[for=svn_env]":                                "Tells the system which SVN environment variables need to be set at execution time",
        "label[for=p4_editor]":                              "Perforce editor for messages",
        "label[for=p4_client]":                              "Must contain <b><i>exactly</i></b> the same folder name as <b>Workspace Name</b>",
        "label[for=p4_port]":                                "Should be the same as <b>Repository URL</b>",
        "label[for=p4_user]":                                "Should be the same as <b>VCS User Name</b>",
        "label[for=p4_passwd]":                              "Should be the same as <b>VCS Password</b>",
        "label[for=p4_env]":                                 "Tells the system which P4 environment variables need to be set at execution time",
        "label[for=p4_del_opt]":                             "Space separated list of options to pass into the command to delete the workspace link between the file system and Perforce Depot repository",
        "label[for=cvs_root]":                               "Should be the same as <b>Repository URL</b>",
        "label[for=cvs_rsh]":                                "The remote shell login executable to use when logging into a remote host",
        "label[for=cvs_env]":                                "Tells the system which CVS environment variables need to be set at execution time",
        "label[for=tfs_editor]":                             "TFS editor for messages",
        "label[for=tfs_env]":                                "Tells the system which TFS environment variables need to be set at execution time",
        "label[for=tfs_checkin_options]":                    "Any additional options that should be passed for checkin only (<b>Deprecated</b> - Please use <b>VCS Checkin Options</b> instead)",
        "label[for=tfs_server_url]":                         "TFS Server URL (usually just $)",
        "label[for=cust_var_name]":                          "The name of the custom variable (custom variables can then be used in this deployment profile, in deployment plans, or in module files using the $ or % notation)",
        "label[for=cust_var_value]":                         "The value of the custom variable"
    },
    "config_preferences" : {
        "label[for=backupFiles]":                            "Indicates whether to back up configuration, module, or plan files with each edit",
        "label[for=defaultProfile]":                         "The deployment profile to use or display for generation of server and data source attributes, auto-generation of module entries, and execution of deployment plans",
        "label[for=defaultServer]":                          "The deployment server (CIS instance) to use or display for generation of server and data source attributes, auto-generation of module entries, and execution of deployment plans",
        "label[for=restrictAccessToLocalhost]":              "Indicates whether the web server running the PDToolGUI application should accept requests only from localhost (and not remote clients)",
        "label[for=xmlIndentWidth]":                         "The number of spaces to use for indenting when writing out XML files",
        "img[alt=edit_profiles]":                            "Edit deployment profiles",
        "img[alt=edit_servers]":                             "Edit servers"
    },
    "config_servers" : {
        "label[for=id]":                                     "Uniquely identifies the server. This is used in deployment plan files to identify the target for a deployment step.",
        "label[for=hostname]":                               "The host name or IP address of the server running the CIS instance",
        "label[for=port]":                                   "The base port number that the CIS instance is listening on (9400, 9410, etc.)",
        "label[for=usage]":                                  "An short description of how the CIS instance is used (dev, test, etc.) (optional)",
        "label[for=user]":                                   "The user name to connect to the CIS instance with",
        "label[for=encryptedpassword]":                      "The connecting user's password. This is automatically encrypted.",
        "label[for=domain]":                                 "The CIS domain of the connecting user",
        "label[for=cishome]":                                "The installation folder on the CIS instance's host where CIS installed (optional)",
        "label[for=clustername]":                            "In a clustered environment, this is the name of the cluster (optional)",
        "label[for=site]":                                   "A short description of where the CIS instance is located (optional)",
        "label[for=useHttps]":                               "Indicates whether communications with the CIS instance should be encrypted"
    },
    "config_vcs_init" : {
        "label[for=profilePath]":                            "The deployment profile to use for checking the VCS status and initializing the VCS workspace",
        "label[for=vcs_status]":                             "The current status of the VCS configuration",
        "img[alt=edit_profiles]":                            "Edit deployment profiles"
    },
    "dep_plan" : {
        "label[for=enabled]":                                "Indicates if the plan step should execute or not",
        "label[for=expectedBehavior]":                       "Indicates if the plan step is expected to complete successfully or not",
        "label[for=exitOnError]":                            "Indicates if the rest of the deployment should be skipped if the plan step does not behave as expected",
        "label[for=module]":                                 "The module to use for the plan step",
        "label[for=method]":                                 "The module method to call for the plan step",
        "label[for=server]":                                 "The CIS instance on which to perform this step",
        "img[alt=edit_servers]":                             "Edit servers"
    },
    "execute" : {
        "img[alt=edit_profiles]":                            "Edit deployment profiles"
    },
    "module_archive" : {
        "label[for=id]":                                     "The unique identifier for the archive entry",
        "label[for=pkgName]":                                "A name for the archive package. Spaces are allowed but punctuation is not. (optional)",
        "label[for=archiveFileName]":                        "The path to the archive file",
        "label[for=description]":                            "A description of the contents of the archive (optional)",
        "label[for=includeDependencies]":                    "Gathers and includes all dependent resources for the resources that are choosen for export (export)",
        "label[for=encrypt]":                                "Indicates whether to encrypt archive communications (export, import)",
        "label[for=includeaccess]":                          "This must be set to True in order to preserve ownership and privilege information (export, import)",
        "label[for=includeallusers]":                        "Includes all domains, groups, and users in the export file (export, import)",
        "label[for=includerequiredusers]":                   "Includes the information about the required users in the export file (export)",
        "label[for=includecaching]":                         "Includes the details of caching on views and procedures (export, import)",
        "label[for=includejars]":                            "Includes any custom Java procedure data source’s JAR files in the export file (export, import)",
        "label[for=includesourceinfo]":                      "Includes connection details and user credentials in the export file (passwords are encrypted) (export, import)",
        "label[for=includestatistics]":                      "Includes any resource statistics gathered about tables and/or views (export)",
        "label[for=messagesonly]":                           "Writes any messages generated in a package import to the PDTool log without actually performing the import. (import)",
        "label[for=overridelocks]":                          "Resources present in a CAR file will overwrite locked resources in the target CIS instance (import)",
        "label[for=overwrite]":                              "Ensures that CIS exactly matches the directories present in the CAR file. Clears only folder directories specifically included in the export file before reading in the export file contents. (import)",
        "label[for=printinfo]":                              "Causes the archive file to be examined and information about it to be written to the PDTool log. The archive file is not imported when this option is specified. (import)",
        "label[for=printroots]":                             "Writes the new paths to the imported resources to the PDTool log. The archive file is NOT imported when this option is given. (import)",
        "label[for=printusers]":                             "Writes the user names of the owners of the imported resources and their associated user groups to the PDTool log. The archive file is not imported when this option is specified. (import)",
        "label[for=printcontents]":                          "Disables actual import, and prints properties of the CAR file to the PDTool log (import)",
        "label[for=printreferences]":                        "Writes a list of resources referred to by the imported resources to the PDTool log. The archive file is not imported when this option is specified. (import)",
        "label[for=res_action]":                             "Indicates the resource should be exported (export), rebound (import), or relocated (import)",
        "label[for=res_orig_path]":                          "The resource path for exports. The original resource path for rebinds and relocations.",
        "label[for=res_new_path]":                           "The new resource path for rebinds and relocations. Leave blank for exports.",
        "label[for=attr_path]":                              "The resource path to be updated.",
        "label[for=attr_type]":                              "The resource type (currently only data sources are supported)",
        "label[for=attr_name]":                              "The name of the attribute to update",
        "label[for=attr_value]":                             "The new value for the attribute",
        "label[for=user_import]":                            "Indicates whether to merge or overwrite user definitions when importing",
        "label[for=exp_domain]":                             "The CIS domain of the user or group to export",
        "label[for=exp_ug]":                                 "Indicates whether a user or group is being exported",
        "label[for=exp_value]":                              "The name of the user or group to export"
    },
    "module_data_source" : {
        "label[for=id]":                                     "The unique identifier for the data source entry",
        "label[for=type]":                                   "The type of the data source entry",
        "label[for=resourcePath]":                           "The path to the resource",
        "label[for=resourceType]":                           "The type of the resource (this will always be <b>Data Source</b>)",
        "label[for=subtype]":                                "The resource subtype",
        "label[for=dataSourceType]":                         "The data source type (CJP, flat file, Oracle, etc.) This needs to be set in order to display the available attributes for the data source (otherwise, the attributes will all be marked as <b>*Custom</b>.",
        "label[for=hostname]":                               "The host name or IP address of the server running the relational data source",
        "label[for=port]":                                   "The port number the relational data source is listening on",
        "label[for=databaseName]":                           "The default database to use when connecting to the relational data source",
        "label[for=login]":                                  "The user name to connect to the data source with",
        "label[for=encryptedPassword]":                      "The password to connect to the data source with (this is encrypted automatically)",
        "label[for=valQuery]":                               "A query to run when checking a connection out of the data source's connection pool (optional)",
        "label[for=reportDetail]":                           "The level of detail to write to the PDTool log when introspecting a data source",
        "label[for=updateAllIntrospectedResources]":         "Indicates whether to re-introspect existing introspected resources when adding or removing data source resources",
        "label[for=failFast]":                               "Indicates whether the introspection task should halt on the first error or continue on a best effort basis",
        "label[for=commitOnFailure]":                        "Indicates whether the introspection should commit whatever it can. If <b>Fail Fast</b> is also <b>True</b>, then only the successfully introspected resources, up to that point, will be committed.",
        "label[for=autoRollback]":                           "Indicates whether the introspection task will rollback back rather than committing.  This supersedes all commit options. This allows for the performance of a dry run of resource introspection. If <b>Auto Rollback</b> is <b>False</b>, then the introspection will be committed, if possible.",
        "label[for=scanForNewResourcesToAutoAdd]":           "Indicates whether the introspection task will scan for native resources that have been newly added to the data source. If newly added resources are found and their parent container has the <b>autoAddChildren</b> introspection attribute set, then that child will automatically be introspected.",
        "label[for=int_res_path]":                           "The relative path (from the data source) to the data source resource to introspect",
        "label[for=int_res_type]":                           "The resource type of the resource",
        "label[for=int_res_subtype]":                        "The resource subtype of the resource",
        "label[for=int_res_action]":                         "The action to take when the resource is encountered",
        "label[for=attr_name]":                              "The attribute's name",
        "label[for=attr_type]":                              "The attribute's type",
        "label[for=attr_value]":                             "The value to set the attribute to",
        "label[for=profile_list]":                           "The deployment profile to use when generating data source entries",
        "label[for=server_list]":                            "The CIS instance to connect to when generating data source entries",
        "label[for=startPath]":                              "The CIS folder to start in when looking for data sources (the search is recursive)",
        "img[alt=edit_profiles]":                            "Edit deployment profiles",
        "img[alt=edit_servers]":                             "Edit servers"
    },
    "module_group" : {
        "label[for=id]":                                     "The unique identifier for the group entry",
        "label[for=groupName]":                              "The group's name",
        "label[for=groupDomain]":                            "The group's domain",
        "label[for=profile_list]":                           "The deployment profile to use when generating group entries",
        "label[for=server_list]":                            "The CIS instance to connect to when generating group entries",
        "label[for=domain]":                                 "The domain in which to search for groups",
        "img[alt=edit_profiles]":                            "Edit deployment profiles",
        "img[alt=edit_servers]":                             "Edit servers"
    },
    "module_privilege" : {
        "label[for=id]":                                     "The unique identifier for the privilege entry",
        "label[for=resourcePath]":                           "The path to the resource on which to set the privileges",
        "label[for=resourceType]":                           "The resource type",
        "label[for=recurse]":                                "Indicates whether to recurse into the resource's children when setting privileges",
        "label[for=updateDependenciesRecursively]":          "If <b>True</b>, then all dependencies of the given resources will recursively be updated with the privileges assigned to their parent",
        "label[for=mode]":                                   "Indicates whether to set the privileges exactly to the settings in this entry or to simply overlay the existing settings",
        "label[for=name]":                                   "The name of the user or group to set the privileges for",
        "label[for=name_type]":                              "Indicates whether the name applies to a user or group",
        "label[for=domain]":                                 "The domain of the user or group",
        "label[for=set_privs]":                              "The privileges to set",
        "label[for=profile_list]":                           "The deployment profile to use when generating group entries",
        "label[for=server_list]":                            "The CIS instance to connect to when generating group entries",
        "label[for=startPath]":                              "The CIS folder in which to start searching for resources",
        "label[for=filter]":                                 "A filter that indicates which resource types to generate privileges for (defaults to all resources)",
        "label[for=options]":                                "A list of options that further refines the list of resources to generate privileges for (defaults to <b>Group</b>, <b>Non-System</b>, and <b>Parent</b> if nothing is chosen)",
        "label[for=domainList]":                             "A comma separated list of domains to search (defaults to <b>composite</b> if not set)",
        "label[for=privileges]":                             "The privileges to set",
        "label[for=combinedPrivileges]":                     "For generated entries, this indicates the current combined (explicit and implicit) privileges (when group memberships and rights are accounted for at the time of generation.) These settings are informational only and cannot be updated.",
        "label[for=inheritedPrivileges]":                    "For generated entries, this indicates the current inherited (implicit only) privileges (when group memberships and rights are accounted for at the time of generation.) These settings are informational only and cannot be updated.",
        "img[alt=edit_profiles]":                            "Edit deployment profiles",
        "img[alt=edit_servers]":                             "Edit servers"
    },
    "module_rebind" : {
        "label[for=id]":                                     "The unique identifier for the rebind entry",
        "label[for=type]":                                   "The rebind type",
        "label[for=resourcePath]":                           "The path to the resource to rebind",
        "label[for=resourceType]":                           "The resource's type",
        "label[for=startingFolderPath]":                     "The starting folder to look for resources to rebind",
        "label[for=rebindFromFolder]":                       "The folder to rebind from (search text)",
        "label[for=rebindToFolder]":                         "The folder to rebind to (replacement text)",
        "label[for=old_path]":                               "The resource path to the resource to rebind from",
        "label[for=old_type]":                               "The resource type of the resource to rebind from",
        "label[for=new_path]":                               "The resource path to the new resource to rebind to",
        "label[for=new_type]":                               "The resource type of the new resource to rebind to",
        "label[for=profile_list]":                           "The deployment profile to use when generating rebind entries",
        "label[for=server_list]":                            "The CIS instance to connect to when generating rebind entries",
        "label[for=startPath]":                              "The CIS folder to start in when looking for resources (the search is recursive)",
        "img[alt=edit_profiles]":                            "Edit deployment profiles",
        "img[alt=edit_servers]":                             "Edit servers"
    },
    "module_regression" : {
        "label[for=reg_type]":                               "The type of the regression entry",
        "label[for=id]":                                     "The unique identifier for the regression entry. Queries don't have identifiers so a system-generated identifier is used on the entry listing page.",
        "label[for=inputFilePath]":                          "Full path to the input file on the file system. For windows environments, use double \"\\\\\" for paths such as <span class='code'>C:\\\\tmp\\\\regression\\\\file.inp</span> or use this style <span class='code'>C:/tmp/regression/file.inp<span class='code'>. For LINUX/UNIX use the normal path notation, e.g. <span class='code'>/tmp/regression/file.inp</span>.",
        "label[for=createNewFile]":                          "Indicates whether a new input file should be created",
        "label[for=nfp_createQueries]":                      "Indicates whether a query statement should be created in the published test input file for views of the configured Composite data source",
        "label[for=nfp_createProcedures]":                   "Indicates whether a procedure invocations should be created in the published test input file for procedures of the configured Composite data source",
        "label[for=nfp_createWS]":                           "Indicates whether a web service invocation should be created in the published test input file for web services of the configured Composite data source",
        "label[for=nfp_createSoapType]":                     "Specifies whether to generate web services using SOAP 1.1 (default), SOAP 1.2 or all. SOAP 1.2 is only applicable for New Composite Web Services (not legacy web services.)",
        "label[for=nfp_useDefaultViewQuery]":                "Indicates whether to use the default query when generating input file instead of using the list of pre-defined regression queries",
        "label[for=nfp_useDefaultProcQuery]":                "Indicates whether to use the default procedure when generating input file instead of using the list of pre-defined regression queries",
        "label[for=nfp_useDefaultWSQuery]":                  "Indicates whether to use the default web service when generating input file instead of using the list of pre-defined regression queries",
        "label[for=nfp_publishedViewQry]":                   "A template query that should be used when generating the queries for the published test input file. A standard template query for views is: <span class='code'>SELECT count(1) cnt FROM</span>",
        "label[for=nfp_publishedProcQry]":                   "a template query that should be used when generating the queries for the published test input file. A standard template query for procedures is: <span class='code'>SELECT count(*) cnt FROM</span>",
        "label[for=nfp_useAllDatasources]":                  "Indicates whether to use all the Composite data sources published by Composite or use the list provided in the input file. If <b>True</b>, generate entries for all data sources that are published. If <b>False</b>, only generate entries for data sources listed in the <b>Data Sources</b> field.",
        //"label[for=nfp_datasources]":                        "A comma separated list of data sources to interrogate when generating the input file (use the <b>Set</b> button to the right of the field to update the entries.) Simply specify the virtual database or web service name (not the entire path.)",
        "label[for=nfp_datasources]":                        "A comma separated list of data sources to interrogate when generating the input file. Simply specify the virtual database or web service name (not the entire path.)",
        //"label[for=nfp_resources]":                          "A comma separated list of resources on which to run queries (use the <b>Set</b> button to the right of the field to update the entries.) A wild card \".*\" may be used at the catalog or schema level to denote that all resources under that level should be queried. A fully qualified resource may be identified as well. This is a filter that can be fine-tuned for one or more resources. If left empty then all resources are queried. Overlapping resource wild cards will use the highest level specified in this list.",
        "label[for=nfp_resources]":                          "A comma separated list of resources on which to run queries. A wild card \".*\" may be used at the catalog or schema level to denote that all resources under that level should be queried. A fully qualified resource may be identified as well. This is a filter that can be fine-tuned for one or more resources. If left empty then all resources are queried. Overlapping resource wild cards will use the highest level specified in this list.",
        "label[for=nfp_securityGenerationOptions]":          "These settings are used in conjunction with the Regression Module's <span class='code'>generateRegressionSecurityXML()</span> method for generating security regression tests automatically",
        "label[for=nfp_defaultProcParamValues]":             "The listing of variable types provides the user with the ability to set default parameter values for procedures. For example, if a published procedure has an integer data type for a parameter and the default value for <b>Integer</b> is configured as <span class='code'>2</span> then the published test input file will contain the following generated query:<span class='code'><br><br>[PROCEDURE] <br>database=EXAMPLES <br>SELECT count(*) cnt <br>&nbsp;&nbsp;FROM LookupProduct(2)</span>",
        "label[for=sgo_pathToTargetRegressionXML]":          "The path to the module XML file that will receive the generated regression elements",
        "label[for=sgo_encryptedPassword]":                  "A default password for generated users",
        //"label[for=sgo_userFilter]":                         "A comma separated list of user names or user wildcard filters to use when generating security users (use the <b>Set</b> button to the right of the field to update the entries)",
        "label[for=sgo_userFilter]":                         "A comma separated list of user names or user wildcard filters to use when generating security users",
        //"label[for=sgo_domainFilter]":                       "A comma separated list of CIS domain names or CIS domain wildcard filters to use when generating security users (use the <b>Set</b> button to the right of the field to update the entries)",
        "label[for=sgo_domainFilter]":                       "A comma separated list of CIS domain names or CIS domain wildcard filters to use when generating security users",
        "label[for=sgo_userMode]":                           "Indicates how to deal with existing user entries in the target regression XML file. <b>No Execute</b> (default) = do nothing, don't execute. <b>Overwrite</b> = overwrite existing security user XML, <b>Append</b> = add to existing security user XML if the user does not exist.",
        "label[for=sgo_queryMode]":                          "Indicates how to deal with existing query entries in the target regression XML file. <b>No Execute</b> (default) = do nothing, don't execute. <b>Overwrite</b> = overwrite existing security query XML, <b>Append</b> = add to existing security query XML if the query does not exist.",
        "label[for=sgo_planMode]":                           "Indicates how to deal with existing plan entries in the target regression XML file. <b>No Execute</b> (default) = do nothing, don't execute. <b>Overwrite</b> = overwrite existing security plan XML, <b>Append</b> = add to existing security plan XML if the plan does not exist.",
        "label[for=sgo_planModeType]":                       "Indicates how to create security test plans. <b>Single Plan</b> = Generate the Cartesian plan as a single plan (will produce a new list where each user is a security plan with the full set of queries.) <b>Multi-Plan</b> = Generate the Cartesian plan as multiple plans for each user who has the same set of queries (will produce a new plan appended to the existing set of plans where this plan will contain a Cartesian product of users and queries.)",
        "label[for=sgo_planIdPrefix]":                       "A prefix to use instead of the default \"sp\"",
        "label[for=sgo_planGenerateExpectedOutcome]":        "Indicates whether to (<b>True</b>) generate the outcome based on retrieving privileges for a given query resource and cross-referencing with the user and their groups to determine what the expected outcome should be upon execution or (<b>False</b>) do not generate the outcome and leave blank",
        "label[for=sgo_flattenSecurityUsersXML]":            "Indicates whether to (<b>True</b>) flatten the security user results to a single line of text or (<b>False</b>) print out with pretty XML output.  This will not have any visible affect on users of the PDTool GUI. Recommend <b>True</b> for users that will be editing the regression module XML by hand.",
        "label[for=sgo_flattenSecurityQueryQueriesXML]":     "Indicates whether to (<b>True</b>) flatten the security select query results to a single line of text or (<b>False</b>) print out with pretty XML output.  This will not have any visible affect on users of the PDTool GUI. Recommend <b>True</b> for users that will be editing the regression module XML by hand.",
        "label[for=sgo_flattenSecurityQueryProceduresXML]":  "Indicates whether to (<b>True</b>) flatten the security procedure query results to a single line of text or (<b>False</b>) print out with pretty XML output.  This will not have any visible affect on users of the PDTool GUI. Recommend <b>True</b> for users that will be editing the regression module XML by hand.",
        "label[for=sgo_flattenSecurityQueryWebServicesXML]": "Indicates whether to (<b>True</b>) flatten the security seb service query results to a single line of text or (<b>False</b>) print out with pretty XML output.  This will not have any visible affect on users of the PDTool GUI. Recommend <b>True</b> for users that will be editing the regression module XML by hand.",
        "label[for=sgo_flattenSecurityPlansXML]":            "Indicates whether to (<b>True</b>) flatten the security plan results to a single line of text or (<b>False</b>) print out with pretty XML output.  This will not have any visible affect on users of the PDTool GUI. Recommend <b>True</b> for users that will be editing the regression module XML by hand.",
        "label[for=trp_testType]":                           "This parameter defines what type of test will be executed",
        "label[for=trp_logFilePath]":                        "Full path to the test run results which are written to this log file. <b>NOTE</b> If this field is not filled in, the rest of the fields on this tab will be ignored.",
        "label[for=trp_logDelimiter]":                       "This is the delimiter used when generating the summary log file",
        "label[for=trp_logAppend]":                          "Indicates whether to append log entries to the log file",
        "label[for=trp_baseDir]":                            "Base directory for output result files. These are the results/content files generated for each query which is executed. These are the files that will be used during the comparison phase. They are used for migration testing.",
        "label[for=trp_delimiter]":                          "This is the delimiter used when generating the result data files. It is recommended that <b>PIPE</b> be used since data often contains commas.",
        "label[for=trp_printOutput]":                        "Write output to the PDTool log: <br><b>Verbose</b> = print summary and results, <br><b>Summary</b> = print query context, <br><b>Silent</b> = nothing is written to the PDTool log",
        "label[for=trp_perfTestThreads]":                    "The number of threads to create when doing performance testing",
        "label[for=trp_perfTestDuration]":                   "The duration in seconds to execute the performance test for",
        "label[for=trp_perfTestSleepPrint]":                 "The number of seconds to sleep in between printing stats when executing the performance test",
        "label[for=trp_perfTestSleepExec]":                  "The number of seconds to sleep in between query executions when executing the performance test",
        "label[for=trp_runQueries]":                         "Indicates whether whether query statement should be executed from the published test input file for views of the configured Composite data source",
        "label[for=trp_runProcedures]":                      "Indicates whether procedure invocations should be executed from the published test input file for procedures of the configured Composite data source",
        "label[for=trp_runWS]":                              "Indicates whether web service invocation should be executed from the published test input file for web services of the configured Composite data source",
        "label[for=trp_useAllDatasources]":                  "Indicates whether to run queries from all the Composite data sources found in the published test input file or use the list provided in the input file. If <b>True</b>, run tests for all data sources from the input file, data sources from the <b>Data Sources</b> field are ignored. If <b>False</b>, then only run queries for the data sources specified in the <b>Data Sources</b> field.",
        //"label[for=trp_datasources]":                        "A comma separated list of data sources to execute when running the input file (use the <b>Set</b> button to the right of the field to update the entries.) Simply specify the virtual database or web service name (not the entire path.)",
        "label[for=trp_datasources]":                        "A comma separated list of data sources to execute when running the input file. Simply specify the virtual database or web service name (not the entire path.)",
        //"label[for=trp_resources]":                          "A comma separated list of resources on which to run queries (use the <b>Set</b> button to the right of the field to update the entries.) A wild card \".*\" may be used at the catalog or schema level to denote that all resources under that level should be queried. A fully qualified resource may be identified as well. This is a filter that can be fine-tuned for one or more resources. If left empty then all resources are queried. Overlapping resource wild cards will use the highest level specified in this list.",
        "label[for=trp_resources]":                          "A comma separated list of resources on which to run queries. A wild card \".*\" may be used at the catalog or schema level to denote that all resources under that level should be queried. A fully qualified resource may be identified as well. This is a filter that can be fine-tuned for one or more resources. If left empty then all resources are queried. Overlapping resource wild cards will use the highest level specified in this list.",
        "label[for=cf_logFilePath]":                         "Full path to the test run results log file",
        "label[for=cf_logDelimiter]":                        "This is the delimiter used when generating the summary log file",
        "label[for=cf_logAppend]":                           "Indicates whether to append log entries to the summary log file",
        "label[for=cf_baseDir1]":                            "Base directory for output result files for instance 1 of the test runs. This would represent the baseline system from which resources are being migrated from or using as a baseline test. These files are the results/content files generated for each query which is executed.",
        "label[for=cf_baseDir2]":                            "Base directory for output result files for instance 2 of the test runs. This would represent the target system from which resources are being migrated to or using as the incremental release. These files are the results/content files generated for each query which is executed.",
        "label[for=cf_compareQueries]":                      "Indicates whether query results should be compared based on entries found in the regression input file",
        "label[for=cf_compareProcedures]":                   "Indicates whether procedure results should be compared based on entries found in the regression input file",
        "label[for=cf_compareWS]":                           "Indicates whether web service results should be compared based on entries found in the regression input file",
        "label[for=cf_useAllDatasources]":                   "Indicates whether to compare queries from all the Composite data sources found in the published test input file or use the list provided in the input file. If <b>True</b>, run tests for all data sources from the input file, data sources from the Data Sources list are ignored. If <b>False</b>, then only run queries for the data sources specified in the <b>Data Sources</b> field.",
        //"label[for=cf_datasources]":                         "A comma separated list of data sources to execute when running the input file (use the <b>Set</b> button to the right of the field to update the entries.) Simply specify the virtual database or web service name (not the entire path.)",
        "label[for=cf_datasources]":                         "A comma separated list of data sources to execute when running the input file. Simply specify the virtual database or web service name (not the entire path.)",
        //"label[for=cf_resources]":                           "A comma separated list of resources on which to perform comparisons (use the <b>Set</b> button to the right of the field to update the entries.) A wild card \".*\" may be used at the catalog or schema level to denote that all resources under that level should be compared. A fully qualified resource may be identified as well. This is a filter that can be fine-tuned for one or more resources. If left empty then all resources are compared. Overlapping resource wild cards will use the highest level specified in this list.",
        "label[for=cf_resources]":                           "A comma separated list of resources on which to perform comparisons. A wild card \".*\" may be used at the catalog or schema level to denote that all resources under that level should be compared. A fully qualified resource may be identified as well. This is a filter that can be fine-tuned for one or more resources. If left empty then all resources are compared. Overlapping resource wild cards will use the highest level specified in this list.",
        "label[for=cl_logFilePath]":                         "Full path to the test run results log file",
        "label[for=cl_logDelimiter]":                        "This is the delimiter used when generating the summary log file",
        "label[for=cl_logAppend]":                           "Indicates whether to append log entries to the summary log file",
        "label[for=cl_logFilePath1]":                        "Path to the query execution log file representing the baseline system",
        "label[for=cl_logFilePath2]":                        "Path to the query execution log file representing the system to compare results with",
        "label[for=cl_logDelimiter1]":                       "This is the delimiter used within query execution log file 1",
        "label[for=cl_logDelimiter2]":                       "This is the delimiter used within query execution log file 2",
        "label[for=cl_durationDelta]":                       "Default duration delta for all queries. When the difference between duration in file2 and file1 is greater than the default duration then it is an error (outside acceptable range.)",
        "label[for=datasource]":                             "The datasource that this query belongs to. Simply specify the virtual database or web service name (not the entire path.)",
        "label[for=queryType]":                              "The type of query that will be run",
        "label[for=query]":                                  "The actual query which will be used to replace the template query",
        "label[for=durationDelta]":                          "Duration delta for this query which overrides the default duration delta set in the Compare Logs section. When the difference between duration in file2 and file1 is greater than the default duration then it is an error (outside acceptable range.) (optional)",
        "label[for=procOutTypes]":                           "A comma separated list of java data types that represent the output values of the procedure (use the <b>Set</b> button to the right of the field to update the entries) (optional)",
        "label[for=wsPath]":                                 "The endpoint URL for web service queries. This can be found in the CIS web service's WSDL. (optional)",
        "label[for=wsAction]":                               "The name of the web service operation for web service queries. (optional)",
        "label[for=wsEncrypt]":                              "Indicates whether the web service operation should use HTTPS or not. Ignored for non-web service queries.",
        "label[for=wsContentType]":                          "The content type for web service queries. NOTE: Legacy web services only support SOAP 1.1. (optional)",
        "label[for=resourcePath]":                           "The CIS resource path.  It is not required for this to be set for executing queries.  It is a transient setting used when populating security plans.",
        "label[for=resourceType]":                           "The CIS resource type.  It is not required for this to be set for executing queries.  It is a transient setting used when populating security plans.",
        "label[for=userName]":                               "The name of the user to simulate in the security test",
        "label[for=encryptedPassword]":                      "The security user's password. This is automatically encrypted.",
        "label[for=domain]":                                 "The CIS user domain of the user to simulate in the security test",
        "label[for=sp_id]":                                  "The plan step ID",
        "label[for=sp_enabled]":                             "Indicates whether the plan step should be executed or not",
        "label[for=sp_userId]":                              "The <b>Regression ID</b> of the user to be tested",
        "label[for=sp_queryId]":                             "The <b>Regression ID</b> of the query to be stested",
        "label[for=sp_expectedOutcome]":                     "The expected outcome of the plan step's execution",
        "label[for=sp_description]":                         "A description of the plan step"
    },
    "module_resource" : {
        "label[for=id]":                                     "The unique identifier for the resource entry",
        "label[for=resourcePath]":                           "The path to the resource",
        "label[for=resourceType]":                           "The resource's type. Required if more than one resource of the same name exists in the same folder.",
        "label[for=recursive]":                              "Used for creating folders. <b>True</b> = recursively create all of the folders in the path. <b>False</b> = only create the last specified folder in the path",
        "label[for=targetContainerPath]":                    "Used for moving or copying a resource to a new location",
        "label[for=newName]":                                "Used for renaming or copying a resource to a new name",
        "label[for=copyMode]":                               "Used for copying a resource to another location",
        "label[for=comment]":                                "Used to provide an annotation, description or comment when unlocking a resource",
        "label[for=dataServiceName]":                        "Used when executing a procedure. The dataServiceName is the CIS JDBC database name.",
        "label[for=arg_value]":                              "An unbounded list of arguments used when executing a configured procedure. These fields are optional so if the action does not require procedures, they are not necessary to populate. The PDTool will automatically format the arguments and will automatically type cast them for the CIS procedure being invoked."
    },
    "module_resource_cache" : {
        "label[for=id]":                                     "The unique identifier for the resource cache entry",
        "label[for=configured]":                             "Indicates whether the resource is configured for caching or not",
        "label[for=enabled]":                                "Indicates whether caching is enabled or not",
        "label[for=resourcePath]":                           "The path to the cached resource",
        "label[for=resourceType]":                           "The resource's type (currently only <b>Tables</b> and <b>Procedures</b> are supported)",
        "label[for=storageMode]":                            "The storage mode for the cache. <b>Automatic</b> indicates CIS will use it's built-in file caching. <b>Data Source</b> indicates a cache configured data source will be used.",
        "label[for=storagePath]":                            "The path to the cache data source. Leave blank for <b>Automatic</b> storage mode.",
        "label[for=refreshMode]":                            "The refresh mode for the cache. <b>Manual</b> indicates refreshes will only occur when an admin or custom procedure will trigger a refresh. <b>Schedule</b> indicates refreshes will occur on a periodic basis (see <b>Refresh Start Time</b> and <b>Refresh Period</b>.)",
        "label[for=refreshStartTime]":                       "The starting time for periodic refreshes. Leave unset for <b>Manual</b> refresh mode.",
        "label[for=refreshPeriod]":                          "The frequency with which caches will be refreshed. Leave unset for <b>Manual</b> refresh mode.",
        "label[for=expirationPeriod]":                       "The period after which cache data is considered stale. Subsequent accesses to cached data will trigger a refresh if this is set.",
        "label[for=clearRule]":                              "The rule for clearing cache data",
        "label[for=target_name]":                            "The storage target's name. For tables/views this will be <span class='code'>result</span>. For procedure caches, this will either be the name of a cursor output parameter or blank for all scalar output parameters.",
        "label[for=target_path]":                            "The path to the cache data source target table",
        "label[for=profile_list]":                           "The deployment profile to use when generating resource cache entries",
        "label[for=server_list]":                            "The CIS instance to connect to when generating resource cache entries",
        "label[for=startPath]":                              "The CIS folder in which to start searching for resources",
        "label[for=options]":                                "A list of options that further refines the list of resources to generate (defaults to all tables and procedures whether they're configured for caching or not.)",
        "img[alt=edit_profiles]":                            "Edit deployment profiles",
        "img[alt=edit_servers]":                             "Edit servers"
    },
    "module_server_attribute" : {
        "label[for=id]":                                     "The unique identifier for the server attribute entry",
        "label[for=name]":                                   "The full repository path to the attribute",
        "label[for=type]":                                   "The attribute's type",
        "label[for=value]":                                  "The attribute's new value",
        "label[for=profile_list]":                           "The deployment profile to use when generating server attribute entries",
        "label[for=server_list]":                            "The CIS instance to connect to when generating server attribute entries",
        "label[for=startPath]":                              "The CIS folder to start in when looking for resources (the search is recursive)",
        "img[alt=edit_profiles]":                            "Edit deployment profiles",
        "img[alt=edit_servers]":                             "Edit servers"
    },
    "module_trigger" : {
        "label[for=id]":                                     "The unique identifier for the trigger entry",
        "label[for=type]":                                   "Indicates whether the entry is a trigger or schedule entry",
        "label[for=resourcePath]":                           "The path to the trigger resource",
        "label[for=isEnabled]":                              "Indicate whether the trigger is enabled or not",
        "label[for=maxEventsQueued]":                        "The number of trigger start events to queue and process (any more than this do not get processed)",
        "label[for=annotation]":                             "A description of what the trigger is for (optional)",
        "label[for=condition]":                              "The condition is what causes the trigger to fire",
        "label[for=condition_type]":                         "The type of condition",
        "label[for=c0_eventName]":                           "The server event name",
        "label[for=c1_scheduleId]":                          "The trigger module entry that contains this timed trigger entry's firing schedule",
        "label[for=c2_connector]":                           "The name of the JMS connector (containing the configuration for initial context factory, JNDI Provider URL, and Queue Connection Factory) as it appears on the CONNECTOR MANAGEMENT page in Web Manager",
        "label[for=c2_destination]":                         "The name of the connection factory destination (queue or topic)",
        "label[for=c2_selector]":                            "A JMS message selector allows a client to specify, by header field references and property references, the messages it is interested in",
        "label[for=c3_eventName]":                           "The custom event name",
        "label[for=action]":                                 "The action is what happens when the trigger fires",
        "label[for=action_type]":                            "The type of action to take",
        "label[for=a03_procedurePath]":                      "The CIS path to the procedure to execute",
        "label[for=a12_procedurePath]":                      "The CIS path to the data source",
        "label[for=a03_parameterValues]":                    "The comma separated list of parameters to use when executing the procedure. Text and date/time values should be single quoted.",
        "label[for=a23_emailTo]":                            "The comma separated list of email recipients",
        "label[for=a23_emailCC]":                            "The comma separated list of email addresses to CC (optional)",
        "label[for=a23_emailBCC]":                           "The comma separated list of email addresses to BCC (optional)",
        "label[for=a23_emailReplyTo]":                       "The email address to list as the address to reply to (optional)",
        "label[for=a23_emailSubject]":                       "The subject of the email (optional)",
        "label[for=a23_emailBody]":                          "The text of the email (optional)",
        "label[for=a23_skipIfNoResults]":                    "Indicates whether or not to skip sending an email if there are no results to send",
        "label[for=a2_noCommit]":                            "Indicates whether or not the reintrospection should commit any detected changes",
        "label[for=a3_includeSummary]":                      "Indicates whether or not a summary should be included in the email",
        "label[for=mode]":                                   "The schedule's mode. <b>None</b> indicates the trigger should fire only once at the indicated <b>Start Time</b>. <b>Periodic</b> indicates the trigger should fire at the <b>Start Time</b> and then periodically as indicated by the <b>Schedule Period</b>.",
        "label[for=startTime]":                              "The start date and time for the trigger to fire",
        "label[for=schedulePeriod]":                         "The period to wait before firing the trigger again (optional)",
        "label[for=fromTimeInADay]":                         "Sets the start for a window for when the trigger is allowed to fire (optional)",
        "label[for=endTimeInADay]":                          "Sets the end for a window for when the trigger is allowed to fire (optional)",
        "label[for=recurringDay]":                           "Indicates which days the trigger should fire",
        "label[for=isCluster]":                              "Indicates whether the trigger should fire once per cluster (<b>True</b>) or once per node in the cluster (<b>False</b>)",
        "label[for=profile_list]":                           "The deployment profile to use when generating trigger entries",
        "label[for=server_list]":                            "The CIS instance to connect to when generating trigger entries",
        "label[for=startPath]":                              "The CIS folder to start in when looking for trigger resources (the search is recursive)",
        "img[alt=edit_profiles]":                            "Edit deployment profiles",
        "img[alt=edit_servers]":                             "Edit servers"
    },
    "module_user" : {
        "label[for=id]":                                     "The unique identifier for the user entry",
        "label[for=userName]":                               "The user's name",
        "label[for=encryptedPassword]":                      "The user's password. This is automatically encrypted.",
        "label[for=forcePassword]":                          "Indicates whether or not the password should be set on users that already exist.",
        "label[for=domainName]":                             "The user's domain",
        "label[for=annotation]":                             "A description of the user (optional)",
        "label[for=groupName]":                              "The group that the user should be made a member of",
        "label[for=groupDomain]":                            "The group's domain. <b>NOTE</b>: Users cannot be added to LDAP domains. Please see your LDAP administrator.",
        "label[for=profile_list]":                           "The deployment profile to use when generating group entries",
        "label[for=server_list]":                            "The CIS instance to connect to when generating group entries",
        "label[for=domain]":                                 "The domain in which to search for groups",
        "img[alt=edit_profiles]":                            "Edit deployment profiles",
        "img[alt=edit_servers]":                             "Edit servers"
    },
    "module_vcs" : {
        "label[for=id]":                                     "The unique identifier for the VCS entry",
        "label[for=type]":                                   "The VCS module entry type",
        "label[for=vcsType]":                                "The type of VCS being used",
        "label[for=vcsHome]":                                "VCS Client Home directory where the VCS executable lives. Note: This could be a /bin directory. It must be where the VCS Command is found. Windows example: <span class='code'>D:/dev/vcs/csvn/bin</span> or <span class='code'>D:\\\\dev\\\\vcs\\\\csvn\\\\bin</span>, UNIX example: <span class='code'>/usr/bin</span>.",
        "label[for=vcsCommand]":                             "The actual command (executable or batch script) for the given VCS Type",
        "label[for=vcsExecFullPath]":                        "Execute the VCS command with the full path (<b>True</b>) or the VCS command only (<b>False</b>). When set to <b>False</b>, the VCS Command must be in the system path.",
        "label[for=vcsOptions]":                             "VCS options are specific to the VCS type being used and are included in the command line (not set as environment variables.) Subversion examples: <span class='code'>--non-interactive --no-auth-cache --trust-server-cert --config-dir c:\\</span>",
        "label[for=vcsWorkspaceInitNewOptions]":             "Options to use when initializing a new VCS workspace",
        "label[for=vcsWorkspaceInitLinkOptions]":            "Options to use when linking a new VCS workspace",
        "label[for=vcsWorkspaceInitGetOptions]":             "Options to use when performing initial get operation with a new VCS workspace",
        "label[for=vcsCheckinOptions]":                      "Options to use when checking resources into a VCS",
        "label[for=vcsCheckinOptionsRequired]":              "A comma separated list of base-level commands that are required for checkin. <b>VCS Checkin Options</b> is validated against this list.",
        "label[for=vcsCheckoutOptions]":                     "Options to use when checking resources out of a VCS",
        "label[for=vcsCheckoutOptionsRequired]":             "A comma separated list of base-level commands that are required for checkout. <b>VCS Checkout Options</b> is validated against this list.",
        "label[for=vcsRepositoryUrl]":                       "The base URL that identifies the VCS server. The \"//\" after the protocol specification may need to be doubled in some cases, as in <span class='code'>http:////myhost.domain.com/svn/sandbox/PDTOOL</span>.",
        "label[for=vcsProjectPoot]":                         "The root name of the project on the VCS Server",
        "label[for=vcsWorkspaceHome]":                       "This is the CIS VCS Workspace Home. It is recommended to set the location to PDTool home, e.g. <span class='code'>$PROJECT_HOME</span>.",
        "label[for=vcsWorkspaceName]":                       "The name of the workspace folder.  This is not a directory but simply a name. The shorter the better. If running PDTool on the same machine as PDToolStudio then the workspace names should be different.",
        "label[for=vcsWorkspaceDir]":                        "The VCS workspace folder. Generally set to the combination of <b>Workspace Home</b> and <b>Workspace Name</b>.",
        "label[for=vcsTempDir]":                             "The folder used for temporary files. Generally set to a combination of the <b>Workspace Home</b> and a temp dir name such as <span class='code'>$VCS_TYPE$_temp</span>.",
        "label[for=vcsUsername]":                            "The username of the user logging into the VCS Server (optional)",
        "label[for=vcsPassword]":                            "The password of the user logging into the VCS Server (optional). The password is automatically encrypted.",
        "label[for=vcsIgnoreMessages]":                      "A comma separated list of messages for the VCS Module to ignore upon execution",
        "label[for=vcsMessagePrepend]":                      "A static message that gets prepended onto all check-in or forced check-in messages",
        "label[for=svnEditor]":                              "Subversion editor for messages",
        "label[for=svnEnv]":                                 "Tells the system which SVN environment variables need to be set at execution time",
        "label[for=p4Editor]":                               "Perforce editor for messages",
        "label[for=p4Client]":                               "Must contain <b><i>exactly</i></b> the same folder name as <b>Workspace Name</b>",
        "label[for=p4Port]":                                 "Should be the same as <b>Repository URL</b>",
        "label[for=p4User]":                                 "Should be the same as <b>VCS User Name</b>",
        "label[for=p4Passwd]":                               "Should be the same as <b>VCS Password</b>",
        "label[for=p4Env]":                                  "Tells the system which P4 environment variables need to be set at execution time",
        "label[for=p4DelLinkOptions]":                       "Space separated list of options to pass into the command to delete the workspace link between the file system and Perforce Depot repository",
        "label[for=cvsRoot]":                                "Should be the same as <b>Repository URL</b>",
        "label[for=cvsRsh]":                                 "The remote shell login executable to use when logging into a remote host",
        "label[for=cvs_env]":                                "Tells the system which CVS environment variables need to be set at execution time",
        "label[for=tfsEditor]":                              "TFS editor for messages",
        "label[for=tfsEnv]":                                 "Tells the system which TFS environment variables need to be set at execution time",
        "label[for=tfsCheckinOptions]":                      "Any additional options that should be passed for checkin only",
        "label[for=tfsServerUrl]":                           "TFS Server URL (usually just $)",
        "label[for=cust_name]":                              "Custom variable's name",
        "label[for=cust_value]":                             "Custom variable's value",
        "label[for=resourcePath]":                           "The path to the resource",
        "label[for=resourceType]":                           "The resource's type",
        "label[for=vcsLabel]":                               "The VCS label to use when checking out resources (optional)",
        "label[for=revision]":                               "The VCS revision to use when checking out (",
        "label[for=message]":                                "A message to use when checking in. This <b><i>must</i></b> be a single line of text or the checkin will fail.",
        "label[for=profile_list]":                           "The deployment profile to use when generating VCS resource entries",
        "label[for=server_list]":                            "The CIS instance to connect to when generating VCS resource entries",
        "label[for=vcsConnectionId]":                        "The VCS connection ID to use when generating VCS resource entries",
        "label[for=startPath]":                              "The CIS folder to start in when looking for resources (the search is non-recursive)",
        "img[alt=edit_profiles]":                            "Edit deployment profiles",
        "img[alt=edit_servers]":                             "Edit servers"
    }
};